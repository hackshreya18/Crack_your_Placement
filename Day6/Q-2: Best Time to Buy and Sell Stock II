class Solution {
    int solve(vector<vector<int>> &dp,vector<int>& prices,int i,int j){
        
        if(i==prices.size()){
            return 0;
        }

        if(dp[i][j]!=-1){
            return dp[i][j];
        }

        if(j==1){ //// buy:
            int pick=-prices[i]+solve(dp,prices,i+1,0);
            int notpick=0+solve(dp,prices,i+1,1);

            return dp[i][j]=max(pick,notpick);
        }
        else{/// sell:
            int sell=prices[i]+solve(dp,prices,i+1,1);
            int notsell=0+solve(dp,prices,i+1,0);

            return dp[i][j]=max(sell,notsell);
        }

    }
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        vector<vector< int>>dp(n,vector<int>(2,-1));

        return solve(dp,prices,0,1);
    }
};
